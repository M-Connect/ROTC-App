Index: rotc_app/lib/Views/signInPage.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:cloud_firestore/cloud_firestore.dart';\nimport 'package:firebase_auth/firebase_auth.dart';\nimport 'package:flutter/material.dart';\nimport 'package:form_field_validator/form_field_validator.dart';\nimport 'package:rotc_app/services/auth.dart';\nimport 'package:provider/provider.dart';\n\n/*\nSawyer Kisha\n02/02/2021\n1.0 - Prototype 01\nUi for the sign in page\n\nCo-Author:  Kyle Serruys\nAdded Validation for the email and password properties\n*/\nclass SignInView extends StatefulWidget {\n  @override\n  _SignInViewState createState() => _SignInViewState();\n}\n\nclass _SignInViewState extends State<SignInView> {\n  CollectionReference cadres = FirebaseFirestore.instance.collection('cadres');\n  CollectionReference cadets = FirebaseFirestore.instance.collection('cadets');\n\n  //Controllers for e-mail and password textfields.\n  final TextEditingController email = TextEditingController();\n  final TextEditingController password = TextEditingController();\n\n  //Handling signup and signin\n  bool signUp = true;\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Sign-In'),\n\n\n      ),\n      body: Container(\n        padding: EdgeInsets.all(25.0),\n        child: Form(\n          // ignore: deprecated_member_use\n          autovalidate: true,\n          child: Column(\n              mainAxisAlignment: MainAxisAlignment.start,\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Padding(\n                  padding: const EdgeInsets.only(top: 10.0, bottom: 10.0),\n                  child: Text('Username / Email: '),\n                ),\n                TextFormField(\n                  controller: email,\n                  decoration: const InputDecoration(\n                    border: OutlineInputBorder(),\n                    hintText: 'Username / Email',\n                  ),\n                  //onSaved: (String value) {},********************\n                  validator: MultiValidator([\n                    RequiredValidator(errorText: \"Required\"),\n                    EmailValidator(errorText: \"Not a valid email\"),\n                  ]),\n                ),\n                Column(\n                  mainAxisAlignment: MainAxisAlignment.start,\n                  crossAxisAlignment: CrossAxisAlignment.start,\n                  children: [\n                    Padding(\n                      padding: const EdgeInsets.only(top: 10.0, bottom: 10.0),\n                      child: Text('Password: '),\n                    ),\n                    TextFormField(\n                      controller: password,\n                      decoration: const InputDecoration(\n                        border: OutlineInputBorder(),\n                        hintText: 'Password',\n                      ),\n                      obscureText: true,\n                     // onSaved: (String value) {},******************\n                      validator: MultiValidator([\n                        MinLengthValidator(5,\n                            errorText:\n                                \"Password must be at least 5 characters.\"),\n                      ]),\n                    ),\n                    Column(\n                        mainAxisAlignment: MainAxisAlignment.center,\n                        crossAxisAlignment: CrossAxisAlignment.start,\n                        children: [\n                          Container(\n                            child: ElevatedButton(\n                              child: Text('Sign In'),\n                              onPressed: () async {\n                                try {\n                                  context.read<Auth>().signIn(\n                                    email: email.text.trim(),\n                                    password: password.text.trim());\n                                      Navigator.pop(context, '/home');\n\n                                  /*\n                                  UserCredential user = await FirebaseAuth\n                                      .instance\n                                      .signInWithEmailAndPassword(\n                                          email: email.text,\n                                          password: password.text);\n                                  Navigator.pushNamed(context, '/home');*/\n\n                                } catch (e) {\n                                  alertDialog(context);\n                                }\n                              },\n                            ),\n                          ),\n\n                          //added forgot password button - MRU\n                          SizedBox(height: 1.0),\n                          Column(\n                            children: [\n                              TextButton(\n                                child: Text(\n                                  \"Forgot Password?\",\n                                  style: TextStyle(\n                                    color: Colors.blueAccent,\n                                    decoration: TextDecoration.underline,\n                                  ),\n                                ),\n                                onPressed: () {\n                                  Navigator.pushNamed(\n                                      context, '/forgotPassword');\n\n                                },\n                              ),\n                            ],\n                          ),\n                        ])\n                  ],\n                ),\n              ]),\n        ),\n      ),\n    );\n  }\n}\n\nalertDialog(BuildContext context) {\n  Widget button = FlatButton(\n    child: Text(\"OK\"),\n    onPressed: () {\n      Navigator.pushNamed(context, '/signIn');\n    },\n  );\n  AlertDialog alert = AlertDialog(\n    title: Text(\"Error\"),\n    content: Text(\"Invalid login, please re-enter your email and password.\"),\n    actions: [\n      button,\n    ],\n  );\n  showDialog(\n    context: context,\n    builder: (BuildContext context) {\n      return alert;\n    },\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- rotc_app/lib/Views/signInPage.dart	(revision d92a30e776e3a5524a9ea7aabcaf766f05eeee45)
+++ rotc_app/lib/Views/signInPage.dart	(date 1614060887000)
@@ -30,6 +30,9 @@
   //Handling signup and signin
   bool signUp = true;
 
+  FirebaseAuth auth = FirebaseAuth.instance;
+
+
   @override
   Widget build(BuildContext context) {
     return Scaffold(
@@ -94,11 +97,13 @@
                               child: Text('Sign In'),
                               onPressed: () async {
                                 try {
+
+                                  /*
                                   context.read<Auth>().signIn(
                                     email: email.text.trim(),
                                     password: password.text.trim());
-                                      Navigator.pop(context, '/home');
-
+                                      Navigator.pushNamed(context, '/home');
+*/
                                   /*
                                   UserCredential user = await FirebaseAuth
                                       .instance
